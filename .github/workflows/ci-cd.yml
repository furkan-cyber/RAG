name: Optimized CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/furkan-cyber/ragnttdata:latest
  PYTHON_VERSION: '3.9'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: pip-cache
      with:
        path: |
          ~/.cache/pip
          ~/.local
        key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-pip-
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user -r requirements.txt pytest-xdist
        python -m nltk.downloader punkt stopwords
    
    - name: Run tests with coverage
      run: |
        pytest -n auto --cov=. --cov-report=xml --durations=10 main.py
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      id: buildx
      with:
        driver: docker-container
        buildkitd-flags: --debug
        install: true
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        builder: ${{ steps.buildx.outputs.name }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Deploy to Vertex AI
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth configure-docker
        docker run --env SERVICE_OPTION=deploy ${{ env.DOCKER_IMAGE }}
